#!/usr/bin/env bash


echo() { printf '%s\n' "$*"; }
err() { echo "$*" >&2; }

usage() {
	echo "Usage: lockd [-r <rundir>] [-p <poll_rate>] <command>"
}

cleanup() {
	rm -f "$cfg_lockfile"
}

main() {
	if ! [[ "$XDG_RUNTIME_DIR" ]]; then
		XDG_RUNTIME_DIR="/run/user/$UID"
	fi

	cfg_poll_rate=3
	cfg_rundir="$XDG_RUNTIME_DIR"

	while (( $# )); do
		case "$1" in
			(-h|--help) usage; return 0;;

			(-r|--run-dir) cfg_rundir=$2;;
			(-p|--poll-rate) cfg_poll_rate=$2;;

			(-o|--once) flag_once=1;;

			(--) shift; break;;
			(-*) err "Unknown flag: $1"; return 1;;
			(*) break;;
		esac
		shift
	done

	cfg_lockfile="$cfg_rundir/lockd.lock"

	(( $# )) || {
		usage
		return 1
	}

	lock_cmd=( "$@" )

	[[ $(xssstate -s) == 'disabled' ]] && {
		err "Screensaver is disabled. Use xset s <seconds> to enable it."
		return 1
	}

	if (( flag_once )); then
		> "$cfg_lockfile"
		"${lock_cmd[@]}"
	else
		while sleep "$cfg_poll_rate"; do
			if ! [[ -f "$cfg_lockfile" ]]; then
				time_left=$(( $(xssstate -t) / 1000 ))

				if ! (( time_left )); then
					echo "$(date) locking."

					> "$cfg_lockfile"
					while ! "${lock_cmd[@]}"; do
						echo "$(date) locker exited abnormally!"
					done

					echo "$(date) unlocked."
					rm -f "$cfg_lockfile"
				fi
			fi
		done
	fi
}

trap 'cleanup' EXIT

main "$@"
